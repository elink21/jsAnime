/*
  Oh Hello!
  These are some base styles so that our tutorial looks good.
  Let's go through the important bits real quick
*/
:root {
  --yellow: #ffc600;
  --black: #272727;
}

html {
  /* border-box box model allows us to add padding and border to our elements without increasing their size */
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* A system font stack so things load nice and quick! */
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-weight: 900;
  font-size: 10px;
  color: var(--black);
  text-shadow: 0 2px 0 rgba(0, 0, 0, 0.07);
}

/*
    WAT IS THIS?!
    We inherit box-sizing: border-box; from our <html> selector
    Apparently this is a bit better than applying box-sizing: border-box; directly to the * selector
  */
*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

body {
  background-image: url("./images/topography.svg"), linear-gradient(110deg, #f93d66, #6d47d9);
  background-size: 340px, auto;
  min-height: calc(100vh - 100px);
  margin: 50px;
  /* background: white; */
  background-attachment: fixed;
  letter-spacing: -1px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 5px 0;
}

/* Each item in our grid will contain numbers */
.item {
  /* We center the contents of these items. You can also do this with flexbox too! */
  display: -ms-grid;
  display: grid;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  border: 5px solid rgba(0, 0, 0, 0.03);
  border-radius: 3px;
  font-size: 35px;
  background-color: var(--yellow);
  /* best colour */
}

.item p {
  margin: 0 0 5px 0;
}

.container {
  display: -ms-grid;
  display: grid;
  grid-gap: 20px;
  /* Make the grid 10 columns wide, every other taking up twice the free space */
  -ms-grid-columns: (1fr 2fr)[5];
      grid-template-columns: repeat(5, 1fr 2fr);
  /* Make the grid have 10 explicit rows, 50px high each */
  -ms-grid-rows: (50px)[10];
      grid-template-rows: repeat(10, 50px);
}

/* With Item 1, start at col 3 and go until 5 */
.item1 {
  -ms-grid-column: 3;
  -ms-grid-column-span: 2;
  grid-column: 3/span 2;
}

/* With Item 2, start at col 5 and go until the end */
.item2 {
  grid-column: 5/-1;
}

/* Make Item 5 double span 2 cols and rows */
.item5 {
  grid-column: span 2;
  grid-row: span 2;
}

/* Make Item 8 two rows high */
.item8 {
  grid-row: span 2;
}

/* Make Item 15 span the entire grid width */
.item15 {
  grid-column: 1/-1;
}

/* Make item 18 span 4 widths, but end at 9 */
.item18 {
  grid-column: span 4;
  grid-column-end: 9;
}

/* Make item 20 start at row 4 and have a height of 3 rows */
.item20 {
  -ms-grid-row: 4;
  -ms-grid-row-span: 3;
  grid-row: 4/  span 3;
}
/*# sourceMappingURL=style.css.map */